# CODE_2_7_QISKIT_1_qubit_8_shots
# QISKIT generate 1-bit binary (0,1) with 1 qubit 8 shots

from qiskit import QuantumCircuit, execute, Aer, IBMQ
from qiskit.visualization import *
from qiskit.tools.jupyter import *

# Create a quantum circuit with 1 qubits and 1 classic bits
qcircuit = QuantumCircuit(1,1)

# Add an Hadamard gate to the qubit
qcircuit.h(0)

# Measure and link qubit into classical bit
qcircuit.measure([0],[0])

# Execute the circuit 
backend = Aer.get_backend('qasm_simulator')
result = execute(qcircuit, backend, shots=8, memory = True).result()
counts = result.get_counts(qcircuit)

# Get individual shot results
shotlist = result.get_memory()

# Output
print(counts)
print(shotlist)
plot_histogram(counts)



# Draw the circuit
qcircuit.draw()

